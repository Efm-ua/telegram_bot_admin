from django.core.management.base import BaseCommand
from django.conf import settings
import asyncio
import logging
import sys
from telegram import Update
from telegram.ext import Application, CommandHandler, ContextTypes

# –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –ª–æ–≥—É–≤–∞–Ω–Ω—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

# –ì–ª–æ–±–∞–ª—å–Ω–∞ –∑–º—ñ–Ω–Ω–∞ –¥–ª—è –∑–±–µ—Ä—ñ–≥–∞–Ω–Ω—è –¥–æ–¥–∞—Ç–∫—É
application = None

async def start_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–æ–±–Ω–∏–∫ –∫–æ–º–∞–Ω–¥–∏ /start"""
    user = update.effective_user
    await update.message.reply_text(
        f'–ü—Ä–∏–≤—ñ—Ç, {user.first_name}! üëã\n'
        f'–¶–µ —Ç–µ—Å—Ç–æ–≤–∏–π –±–æ—Ç –¥–ª—è –∞–¥–º—ñ–Ω-–ø–∞–Ω–µ–ª—ñ.'
    )

async def stop_bot():
    """–ó—É–ø–∏–Ω–∫–∞ –±–æ—Ç–∞"""
    global application
    if application:
        await application.stop()
        await application.shutdown()

async def run_bot(token: str):
    """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞"""
    global application
    
    # –°—Ç–≤–æ—Ä—é—î–º–æ –¥–æ–¥–∞—Ç–æ–∫
    application = (
        Application.builder()
        .token(token)
        .build()
    )

    # –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫–∏
    application.add_handler(CommandHandler("start", start_command))

    # –ó–∞–ø—É—Å–∫–∞—î–º–æ –±–æ—Ç–∞
    await application.initialize()
    await application.start()
    await application.run_polling(drop_pending_updates=True)

class Command(BaseCommand):
    help = '–ó–∞–ø—É—Å–∫–∞—î Telegram –±–æ—Ç–∞'

    def handle(self, *args, **options):
        """–ó–∞–ø—É—Å–∫ –∫–æ–º–∞–Ω–¥–∏"""
        # –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –¥–ª—è Windows
        if sys.platform == 'win32':
            asyncio.set_event_loop_policy(asyncio.WindowsSelectorEventLoopPolicy())

        self.stdout.write(self.style.SUCCESS('–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞...'))

        # –û—Ç—Ä–∏–º—É—î–º–æ —Ç–æ–∫–µ–Ω –∑ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å
        token = settings.TELEGRAM_BOT_TOKEN

        # –°—Ç–≤–æ—Ä—é—î–º–æ –Ω–æ–≤–∏–π event loop
        loop = asyncio.new_event_loop()
        asyncio.set_event_loop(loop)

        try:
            # –ó–∞–ø—É—Å–∫–∞—î–º–æ –±–æ—Ç–∞
            loop.run_until_complete(run_bot(token))
        except KeyboardInterrupt:
            self.stdout.write(self.style.SUCCESS('\n–û—Ç—Ä–∏–º–∞–Ω–æ —Å–∏–≥–Ω–∞–ª –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è...'))
            # –ó—É–ø–∏–Ω—è—î–º–æ –±–æ—Ç–∞
            loop.run_until_complete(stop_bot())
        finally:
            # –ó–∞–∫—Ä–∏–≤–∞—î–º–æ event loop
            loop.close()
            self.stdout.write(self.style.SUCCESS('–ë–æ—Ç –∑—É–ø–∏–Ω–µ–Ω–∏–π'))